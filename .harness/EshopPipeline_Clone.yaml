pipeline:
  projectIdentifier: NewProject
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Deploy1
        identifier: Deploy1
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: Service_New_Porject
            serviceDefinition:
              spec:
                variables: []
                manifests:
                  - manifest:
                      identifier: Manifest2
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: harnesseshopgitconnector
                            gitFetchType: Branch
                            paths:
                              - deploy/k8s
                            repoName: eShopOnContainers
                            branch: dev-patch
                        valuesPaths:
                          - deploy/k8s/dashboard-adminuser.yaml
                        skipResourceVersioning: false
              type: Kubernetes
          infrastructure:
            environmentRef: devenvironment
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: newprojectcluster
                namespace: harness-delegate-ng
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: Jira Process
        identifier: Jira_Process
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Create Story
                  identifier: Create_Story
                  type: JiraCreate
                  timeout: 5m
                  spec:
                    connectorRef: JiraNewProjectConnector
                    projectKey: HAR
                    issueType: Story
                    fields:
                      - name: Comment
                        value: Story Created
                      - name: Summary
                        value: new workflow created
              - step:
                  name: Check and approve
                  identifier: Check_and_approve
                  type: JiraApproval
                  timeout: 3m
                  spec:
                    approvalCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions:
                          - key: Status
                            operator: equals
                            value: To Do
                    rejectionCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions: []
                    connectorRef: JiraNewProjectConnector
                    projectKey: HAR
                    issueType: Story
                    issueKey: <+pipeline.stages.Jira_Process.spec.execution.steps.Create_Story.issue.key>
              - step:
                  name: mark as done
                  identifier: mark_as_done
                  type: JiraUpdate
                  timeout: 5m
                  spec:
                    connectorRef: JiraNewProjectConnector
                    issueKey: <+pipeline.stages.Jira_Process.spec.execution.steps.Create_Story.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: Done
                    fields:
                      - name: Comment
                        value: Story Completed
        tags: {}
        when:
          pipelineStatus: All
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: newprojectcluster
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Windows
          execution:
            steps:
              - step:
                  type: GitClone
                  name: gitclone
                  identifier: gitclone
                  spec:
                    connectorRef: harnesseshopgitconnector
                    repoName: eShopOnContainers
                    build:
                      type: branch
                      spec:
                        branch: dev
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: Service_New_Porject
            serviceDefinition:
              spec:
                variables: []
                manifests:
                  - manifest:
                      identifier: newprojectmanifest
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: harnesseshopgitconnector
                            gitFetchType: Branch
                            paths:
                              - deploy/k8s
                            repoName: eShopOnContainers
                            branch: dev
                        valuesPaths:
                          - deploy/k8s/dashboard-adminuser.yaml
                        skipResourceVersioning: false
              type: Kubernetes
          infrastructure:
            environmentRef: devenvironment
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: newprojectcluster
                namespace: harness-delegate-ng
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  properties:
    ci:
      codebase:
        connectorRef: harnesseshopgitconnector
        repoName: eShopOnContainers
        build: <+input>
  identifier: EshopPipeline_Clone
  name: EshopPipeline - Clone
