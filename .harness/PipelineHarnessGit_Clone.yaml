---
pipeline:
  projectIdentifier: "NewProject"
  orgIdentifier: "default"
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: "harnesseshopgitconnector"
        repoName: "eShopOnContainers"
        build: "<+input>"
  stages:
  - stage:
      name: "Build CI"
      identifier: "Build_CI"
      description: ""
      type: "CI"
      spec:
        cloneCodebase: true
        infrastructure:
          type: "KubernetesDirect"
          spec:
            connectorRef: "account.Harness_Kubernetes_Cluster"
            namespace: "harness-delegate-ng"
            automountServiceAccountToken: true
            nodeSelector: {}
            os: "Windows"
        execution:
          steps:
          - step:
              type: "GitClone"
              name: "GitClone"
              identifier: "GitClone"
              spec:
                connectorRef: "harnesseshopgitconnector"
                repoName: "eShopOnContainers"
                build:
                  type: "branch"
                  spec:
                    branch: "dev"
              failureStrategies: []
      when:
        pipelineStatus: "Success"
      failureStrategies:
      - onFailure:
          errors:
          - "AllErrors"
          action:
            type: "MarkAsSuccess"
  - stage:
      name: "Jira Progress"
      identifier: "Jira_Progress"
      description: ""
      type: "Approval"
      spec:
        execution:
          steps:
          - step:
              name: "Create Story"
              identifier: "Create_Story"
              type: "JiraCreate"
              timeout: "2m"
              spec:
                connectorRef: "JiraNewProjectConnector"
                projectKey: "HAR"
                issueType: "Story"
                fields:
                - name: "Comment"
                  value: "Story has been created"
                - name: "Summary"
                  value: "Story to test Harness Progress"
          - step:
              name: "Move the status after approval"
              identifier: "Move_the_status_after_approval"
              type: "JiraApproval"
              timeout: "2m"
              spec:
                approvalCriteria:
                  type: "KeyValues"
                  spec:
                    matchAnyCondition: true
                    conditions:
                    - key: "Status"
                      operator: "equals"
                      value: "To Do"
                rejectionCriteria:
                  type: "KeyValues"
                  spec:
                    matchAnyCondition: true
                    conditions: []
                connectorRef: "JiraNewProjectConnector"
                projectKey: "HAR"
                issueType: "Story"
                issueKey: "<+pipeline.stages.Jira_Progress.spec.execution.steps.Create_Story.issue.key>"
          - step:
              name: "Complete Story"
              identifier: "Complete_Story"
              type: "JiraUpdate"
              timeout: "5m"
              spec:
                connectorRef: "JiraNewProjectConnector"
                issueKey: "<+pipeline.stages.Jira_Progress.spec.execution.steps.Create_Story.issue.key>"
                transitionTo:
                  transitionName: ""
                  status: "Done"
                fields:
                - name: "Comment"
                  value: "Story has been completed from harness"
      tags: {}
  - stage:
      name: "Deploy"
      identifier: "Deploy"
      description: ""
      type: "Deployment"
      spec:
        serviceConfig:
          serviceRef: "Service_New_Porject"
          serviceDefinition:
            spec:
              variables: []
              manifests:
              - manifest:
                  identifier: "ManifestNew"
                  type: "K8sManifest"
                  spec:
                    store:
                      type: "Github"
                      spec:
                        connectorRef: "harnesseshopgitconnector"
                        gitFetchType: "Branch"
                        paths:
                        - "deploy/k8s"
                        repoName: "eShopOnContainers"
                        branch: "dev"
                    valuesPaths:
                    - "deploy/k8s/dashboard-adminuser.yaml"
                    skipResourceVersioning: false
            type: "Kubernetes"
        infrastructure:
          environmentRef: "devenvironment"
          infrastructureDefinition:
            type: "KubernetesDirect"
            spec:
              connectorRef: "newprojectcluster"
              namespace: "harness-delegate-ng"
              releaseName: "release-<+INFRA_KEY>"
          allowSimultaneousDeployments: false
        execution:
          steps:
          - step:
              name: "Rollout Deployment"
              identifier: "rolloutDeployment"
              type: "K8sRollingDeploy"
              timeout: "2m"
              spec:
                skipDryRun: false
                pruningEnabled: false
          rollbackSteps:
          - step:
              name: "Rollback Rollout Deployment"
              identifier: "rollbackRolloutDeployment"
              type: "K8sRollingRollback"
              timeout: "10m"
              spec:
                pruningEnabled: false
      tags: {}
      failureStrategies:
      - onFailure:
          errors:
          - "AllErrors"
          action:
            type: "MarkAsSuccess"
  identifier: "PipelineHarnessGit_Clone"
  name: "PipelineHarnessGit - Clone"
